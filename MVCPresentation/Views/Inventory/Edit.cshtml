@model DataObjects.BookVM

@{
    ViewBag.Title = "Edit " + Model.Title;
}

<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="mt-3">Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <p><strong>Title:</strong> @Model.Title</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookConditionID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookConditionID,
                    new SelectList(ViewBag.BookConditions,
                    "Name",
                    "Name"),
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookConditionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WholesalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WholesalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WholesalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantityByTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantityByTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantityByTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-secondary btn-sm" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary btn-sm ml-2" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.BookCategoryID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.BookGenreID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.PublicationDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.Authors, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}