@model MVCPresentation.Models.CreateBookViewModel

@{
    ViewBag.Title = "Add Book";
}

<h4 class="mt-3">Add Book</h4>
<hr />

<div class="container">
    <div class="col-sm-8 offset-2 border">

        @using (Html.BeginForm())
        {
        <form>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Book.ISBN, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.ISBN, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.Title, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Book.BookCategoryID, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.BookCategoryID, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.Book.BookCategoryID,
                            new SelectList(ViewBag.BookCategories,
                            "Name",
                            "Name"), "Choose Category",
                            new { @class = "col-form" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Book.BookConditionID, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.BookConditionID, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.Book.BookConditionID,
                            new SelectList(ViewBag.BookConditions,
                            "Name",
                            "Name"), "Choose Condition",
                            new { @class = "col-form" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Book.BookGenreID, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.BookGenreID, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(model => model.Book.BookGenreID,
                            new SelectList(ViewBag.BookGenres,
                            "Name",
                            "Name"), "Choose Genre",
                            new { @class = "col-form" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Book.Publisher, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.Publisher, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Book.PublicationDate, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.PublicationDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.PublicationDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Book.WholesalePrice, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.WholesalePrice, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.WholesalePrice, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Book.SalePrice, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.SalePrice, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Book.Quantity, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.Quantity, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Book.QuantityByTitle, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.QuantityByTitle, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.QuantityByTitle, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Authors, "", new { @class = "textdanger" })
                        @Html.EditorFor(model => model.Authors, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Book.LocationID, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Book.LocationID, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Book.LocationID, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-secondary btn-sm" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary btn-sm ml-2" })
                </div>
            </div>
        </form>
           
        }
    </div>
</div>

