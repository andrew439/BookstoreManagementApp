@model MVCPresentation.Models.BooksViewModel

@{
    ViewBag.Title = "Inventory List";
}

<div class="container">
    <div class="row pt-2">
        <h2>Inventory</h2>
    </div>

    <div class="row">
        <p>
            @Html.ActionLink("Add Book", "Create", "Inventory", new { textarea = "" }, new { @class = "btn btn-secondary" })
        </p>
        @using (Html.BeginForm("Index", "Inventory", FormMethod.Get, new { @class = "ml-auto" }))
        {
            @Html.AntiForgeryToken()

            <div class="d-flex flex-row-reverse pb-2">
                <div class="p-1">
                    <input type="submit" value="Filter" class="btn btn-secondary" tabindex="4" />
                </div>
                <div class="p-1" tabindex="3">
                    @{
                        SelectList genreList = new SelectList(Model.GenreOptions, "Name", "Name");
                    }
                    @Html.DropDownListFor(model => model.Genre, genreList, "All Genres",
                            new { @class = "btn btn-secondary dropdown-toggle" })
                </div>

                <div class="p-1" tabindex="2">
                    @{
                        SelectList conditionList = new SelectList(Model.ConditionOptions, "Name", "Name");
                    }
                    @Html.DropDownListFor(model => model.Condition, conditionList, "All Conditions",
                            new { @class = "btn btn-secondary dropdown-toggle" })
                </div>

                <div class="p-1" tabindex="1">
                    @Html.EnumDropDownListFor(model => model.CategoryFilterOptions, "All Categories",
                            new { @class = "btn btn-secondary dropdown-toggle" })
                </div>

                <div class="p-1" tabindex="0">
                    @Html.EnumDropDownListFor(model => model.Sort, "Sort",
                            new { @class = "btn btn-secondary dropdown-toggle" })
                </div>
            </div>
        }

    </div>

    <div class="row">
        @if (Model.Count != 0)
        {
            foreach (var book in Model.BookVMs)
            {
                <div class="col-sm-12 col-md-6 col-lg-4">
                    <div class="card mb-4 p-3 bg-light" style="height: 92%;">
                        <div class="text-center">
                            @{
                                string imagePath = "/Images/" + book.ISBN + ".jpg";
                                <img src="@imagePath" alt="Image of @book.Title" class="card-img-top" style="max-width: 200px; max-height: 252px"  />
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-center"><strong>@Html.DisplayFor(modelItem => book.Title)</strong></h5>
                            <p class="cart-text">Condition: @Html.DisplayFor(modelItem => book.BookConditionID)</p>
                            <p class="cart-text">Category: @Html.DisplayFor(modelItem => book.BookCategoryID) </p>
                            <p class="cart-text">Sale price: $@Html.DisplayFor(modelItem => book.SalePrice)</p>
                            <p class="text-center mt-lg-5">
                                @Html.ActionLink("Edit", "Edit", "Inventory", new { ISBN = book.ISBN }, new { @class = "btn btn-outline-secondary btn-sm" })
                                @Html.ActionLink("Details", "Details", "Inventory", new { ISBN = book.ISBN }, new { @class = "btn btn-outline-secondary btn-sm" })
                                @Html.ActionLink("Delete", "Delete", "Inventory", new { ISBN = book.ISBN }, new { @class = "btn btn-outline-secondary btn-sm" })
                            </p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="h2">No books to display</p>
        }
     </div>
</div>